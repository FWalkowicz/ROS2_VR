//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class HybridPlannerResult : Message
    {
        public const string k_RosMessageName = "moveit_msgs/HybridPlanner";
        public override string RosMessageName => k_RosMessageName;

        //  Result of the hybrid planning
        public MoveItErrorCodesMsg error_code;
        //  Error message with more detailed information about the hybrid planning result
        public string error_message;

        public HybridPlannerResult()
        {
            this.error_code = new MoveItErrorCodesMsg();
            this.error_message = "";
        }

        public HybridPlannerResult(MoveItErrorCodesMsg error_code, string error_message)
        {
            this.error_code = error_code;
            this.error_message = error_message;
        }

        public static HybridPlannerResult Deserialize(MessageDeserializer deserializer) => new HybridPlannerResult(deserializer);

        private HybridPlannerResult(MessageDeserializer deserializer)
        {
            this.error_code = MoveItErrorCodesMsg.Deserialize(deserializer);
            deserializer.Read(out this.error_message);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.error_code);
            serializer.Write(this.error_message);
        }

        public override string ToString()
        {
            return "HybridPlannerResult: " +
            "\nerror_code: " + error_code.ToString() +
            "\nerror_message: " + error_message.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Result);
        }
    }
}
